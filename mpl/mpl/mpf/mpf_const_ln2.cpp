#include "mpf.h"
#include <chrono>
MPL_BEGIN
static int32_t prec = MPF_ORIGINAL_PRECISION;
static const mpf::init_struct mpf_constant_ln2_init_struct =
{
	-130,
	{
		1,
		130,
		{
			196961687, 11211035, 12728505, 58879962, 179223879, 110550308, 98787777, 43139389,
			118844940, 231008072, 85476448, 31868585, 36067472, 60132726, 216192823, 131003120,
			214231328, 44850017, 247102725, 54114859, 152702039, 239702147, 50462816, 26652496,
			157422435, 64011567, 96544981, 243821456, 2826446, 77538158, 117109721, 9485233,
			231314465, 69343294, 208065477, 153234312, 212062046, 265569969, 159539631, 33117067,
			86411868, 264040565, 225399159, 145026968, 43241762, 231270935, 89420572, 162810370,
			53522312, 158158445, 261527604, 118189160, 41152085, 169431470, 87913880, 188429912,
			189601325, 84298776, 256947480, 47919541, 259218715, 113971320, 215706720, 165339923,
			162652539, 156620055, 120917292, 75539777, 242918156, 190846415, 243402573, 145088840,
			124427391, 55986739, 90610483, 224433618, 169741265, 85247169, 241537939, 54316228,
			45382093, 211041907, 193564901, 73430877, 11769367, 37609792, 169180462, 115327471,
			49174173, 150885658, 17641720, 96450822, 80351739, 224157823, 130355007, 170762969,
			120529123, 106297880, 137376328, 234515411, 88656629, 142285270, 122385102, 247948671,
			187002784, 185820675, 166370243, 130254827, 198840625, 244076972, 169222730, 39053676,
			152136120, 41251762, 20455748, 48948060, 169545965, 87012527, 211309973, 34004666,
			199735414, 146452386, 168630107, 160129752, 54732402, 258667535, 60294130, 180133435,
			131190649, 186065279,
		}
	}
};
static mpf ln2 = mpf_constant_ln2_init_struct;

static mpf agm(mpf const& a0, mpf const& b0)
{
	mpf a = a0, b = b0;
	mpf m;
	do
	{
		m = a;
		mpf::add(a, b, a);
		mpf::div_2(a, a);
		mpf::mul(m, b, b);
		mpf::sqrt(b, b);

		mpf::sub(a, b, m);
	} while (!m.is_small_enough());
	return a;
}

mpf const& mpf::const_ln2()
{
	if (MPF_ORIGINAL_PRECISION <= prec)
	{
		return ln2;
	}
	double r = log(MPI_BASE) / log(10);
	uint32_t m = uint32_t(MPF_PRECISION * r) << 1;
	mpf m2;
	m2.set_2expt(m - 2);
	mpf A = agm(m2, 1);
	mpf::mul(m2, mpf::const_pi(), m2);
	mpf::div(m2, A, m2);
	mpf::div_2(m2, m2);
	mpf::div_d(m2, m, m2);
	ln2.swap(m2);
	prec = MPF_ORIGINAL_PRECISION;
	return ln2;
}
MPL_END